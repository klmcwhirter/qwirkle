[project]
name = "qwirkle"
dynamic = ["version"]
description = "Default template for PDM package"
authors = [{ name = "Kevin McWhirter", email = "klmcw@yahoo.com" }]
license = { text = "MIT" }
readme = "README.md"

requires-python = ">=3.12"

dependencies = ["pygame-ce>=2.4.1", "pygbag>=0.9.0"]

[project.urls]
Homepage = "https://github.com/klmcwhirter/qwirkle"
Repository = "https://github.com/klmcwhirter/qwirkle"


[tool.pdm]
distribution = true

[tool.pdm.build]
is-purelib = true

[tool.pdm.version]
source = "scm"
tag_regex = "^(?:[\\w-]+-)?(?P<version>[vV]?\\d+(?:\\.\\d+){0,2})"
# version_format coming soon - https://github.com/pdm-project/pdm-backend/commit/4f20cfd51928b9e4d8b1a941630865755b569b19
# version_format = "qwirkle.version:format_version" 
write_to = "qwirkle/utils/_version.py"
write_template = "__version__ = '{}'"

[tool.pdm.dev-dependencies]
dev = [
    "autopep8>=2.1.0",
    "flake8>=7.0.0",
    "mypy>=1.9.0",
    "pytest>=8.1.1",
    "pytest-cov>=4.1.0",
    "tox>=4.14.1",
    "tox-gh-actions>=3.2.0",
    "tox-pdm>=0.7.2",
]

[tool.pdm.scripts]
create.shell = "pdm venv remove -y in-project; pdm install"
clean.shell = "find . -type d -name __pycache__ -exec rm -fr {} \\;;for d in ${TO_DEL};do echo $d;rm -fr $d;done"
clean.env = { TO_DEL = "build .coverage coverage.xml log .mypy_cache .pdm-build __pycache__ .pytest_cache src/qwirkle.egg-info .tox dist src/build" }
clean.help = "Clean environment"
start = "pdm gui"

gui.cmd = "python -m qwirkle.gui"
web.cmd = "pygbag --width 1600 --height 900 --app_name qwirkle --title Qwirkle {args} src/"

flake8.cmd = "flake8 src/ tests/"
mypy.cmd = "mypy src/ tests/"
test.cmd = "pytest"
testcov.cmd = "pytest --cov=qwirkle --cov-report xml:coverage.xml --cov-report term"
testcov.help = "Produce test coverage xml and term reports"
readmecov.shell = "pytest --cov=qwirkle --cov-report=term | sed -n '/--------/,/^TOTAL/p'"
readmecov.help = "Produce test coverage text snippet for docs/README.md.in"
tox.cmd = "tox"

[tool.autopep8]
max-doc-length = 140
max_line_length = 140

[tool.pytest.ini_options]
addopts = ""

[tool.mypy]
mypy_path = "src/ tests/"
check_untyped_defs = true
disallow_any_generics = false # until Generics union types are supported
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
